/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ocrabaseadmin.struts.action;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.HTableDescriptor;
import org.apache.hadoop.hbase.MasterNotRunningException;
import org.apache.hadoop.hbase.ZooKeeperConnectionException;
import org.apache.hadoop.hbase.master.HMaster;
import org.apache.hadoop.hbase.util.Bytes;
import org.apache.hadoop.security.ACLField;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ocrabaseadmin.operation.authorityOperation;
import com.ocrabaseadmin.operation.tableOperation;

/** 
 * MyEclipse Struts
 * Creation date: 08-11-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/menu.jsp"
 */
public class GetTableListAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		HMaster master = (HMaster)getServlet().getServletContext().getAttribute(HMaster.MASTER);
		
		tableOperation to = new tableOperation();
		authorityOperation ao = new authorityOperation();
		
		Configuration conf = master.getConfiguration();
		boolean security = conf.getBoolean("hbase.server.security",false);
		
		HTableDescriptor[] adminTables = null;
		Map<byte[], ACLField> userTables = null;
		List<String> tableList = new ArrayList<String>();
		
		if(security) {
			String username = (String)request.getSession().getAttribute("username");
			String usertype = (String)request.getSession().getAttribute("usertype");
			try {
				if(usertype.equals("admin")) {
					adminTables = to.getAllTable(master);
					for(HTableDescriptor tableDesc: adminTables){
						tableList.add(tableDesc.getNameAsString());
					}
				}
				else {
					userTables = ao.getUserVisibleTable(master, username);
					for(Map.Entry<byte[], ACLField> entry : userTables.entrySet()) {
						tableList.add(Bytes.toString(entry.getKey()));
					}
				}
			} catch (MasterNotRunningException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ZooKeeperConnectionException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		else {
			try {
				adminTables = to.getAllTable(master);
			} catch (MasterNotRunningException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ZooKeeperConnectionException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			for(HTableDescriptor tableDesc: adminTables){
				tableList.add(tableDesc.getNameAsString());
			}
		}
		
		request.setAttribute("tableList", tableList);
		
		return mapping.findForward("success");
	}
}