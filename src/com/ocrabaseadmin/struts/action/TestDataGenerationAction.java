/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ocrabaseadmin.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ocrabaseadmin.struts.form.TestDataGenerationForm;

import ict.ocrabase.main.java.client.datamaker.DataMakerMaster;

/** 
 * MyEclipse Struts
 * Creation date: 08-25-2011
 * 
 * XDoclet definition:
 * @struts.action path="/testDataGeneration" name="testDataGenerationForm" input="/performanceTest.jsp" scope="request" validate="true"
 */
public class TestDataGenerationAction extends Action {
	/*
	 * Generated Methods
	 */

	private final String HBASEHOME = "/opt/ccindex/hbase-0.90.2-ccindex/";
	
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TestDataGenerationForm testDataGenerationForm = (TestDataGenerationForm) form;// TODO Auto-generated method stub
		
		final String dataSet = testDataGenerationForm.getDataSet();
		final String dataSize = testDataGenerationForm.getDataSize();
		final String threadNumber = testDataGenerationForm.getThreadNumber();
		
		String[] args = new String[4];
		args[0] = threadNumber;
		args[1] = dataSize;
		args[2] = dataSet;
		args[3] = HBASEHOME;
		
		final DataMakerMaster maker = new DataMakerMaster(args);
		
		Thread t = new Thread() {
			public void run() {
				maker.startDataMaker();
				
				while (maker.isEnd() == false) {
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
				maker.getProcess();
			}
		};
		
		t.start();
		
		request.getSession().setAttribute("DATAMAKERMASTER", maker);
		
		return mapping.findForward("success");
	}
}