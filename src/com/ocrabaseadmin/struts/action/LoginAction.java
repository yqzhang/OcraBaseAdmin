/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ocrabaseadmin.struts.action;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.hbase.master.HMaster;
import org.apache.hadoop.hbase.util.Bytes;
import org.apache.hadoop.security.UserValidator;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ocrabaseadmin.struts.form.LoginForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-12-2011
 * 
 * XDoclet definition:
 * @struts.action path="/login.do" name="loginForm" input="/login.jsp" scope="request" validate="true"
 * @struts.action-forward name="fail" path="login.jsp"
 * @struts.action-forward name="success" path="index.jsp"
 */
public class LoginAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;// TODO Auto-generated method stub
		
		String username = loginForm.getUsername();
		String password = loginForm.getPassword();
		
		HMaster master = (HMaster)getServlet().getServletContext().getAttribute(HMaster.MASTER);
		Configuration conf = master.getConfiguration();
		
		boolean security = conf.getBoolean("hbase.server.security",false);
		if(!security) {
			return mapping.findForward("success");
		}
		else {
			String adminUsername = conf.get("hbase.client.user");
			String adminPassword = conf.get("hbase.client.passwd");
			
			boolean ifAdmin = (username.equals(adminUsername) && password.equals(adminPassword)) ? true : false;
			
			if(ifAdmin) {
				request.getSession().setAttribute("usertype", "admin");
				request.getSession().setAttribute("username", username);
				
				UserValidator uv = null;
				try {
					uv = new UserValidator(conf);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				if(uv.getUserGroupMap() == null || uv.getUserGroupMap().size() <= 0) {
					uv.addUser(Bytes.toBytes(username), Bytes.toBytes(password));
				}
				
				return mapping.findForward("success");
			}
			else {
				UserValidator uv = null;
				try {
					uv = new UserValidator(conf);
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				
				if(uv.validateUser(Bytes.toBytes(username), Bytes.toBytes(password)) == true) {
					request.getSession().setAttribute("usertype", "user");
					request.getSession().setAttribute("username", username);
					
					return mapping.findForward("success");
				}
				else {
					try {
						PrintWriter out = response.getWriter();
						
						out.println("<script>");
						out.println("alert(\"Invalid User.\");");
						out.println("window.location=\"login.jsp\";");
						out.println("</script>");
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
					return null;
				}
			}
		}
	}
}