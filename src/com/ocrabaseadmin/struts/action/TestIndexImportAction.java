/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ocrabaseadmin.struts.action;

import ict.ocrabase.main.java.client.ccindex.dataimport.DataImportMaster;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ocrabaseadmin.struts.form.TestIndexImportForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-03-2011
 * 
 * XDoclet definition:
 * @struts.action path="/testIndexImport" name="testIndexImportForm" input="/performanceTest.jsp" scope="request" validate="true"
 */
public class TestIndexImportAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TestIndexImportForm testIndexImportForm = (TestIndexImportForm) form;// TODO Auto-generated method stub
		
		final String hbaseHome = testIndexImportForm.getHbaseHome();
		final String clientsPerHost = testIndexImportForm.getClientsPerHost();
		final String threadsPerClient = testIndexImportForm.getThreadsPerClient();
		final String indexArray = testIndexImportForm.getIndexArray();
		
		String[] args = new String[4];
		args[0] = indexArray;
		args[1] = threadsPerClient;
		args[2] = clientsPerHost;
		args[3] = hbaseHome;
		
		final DataImportMaster importMaster = new DataImportMaster(args);
		
		request.getSession().setAttribute("DATAIMPORTMASTER", importMaster);
		
		Thread t = new Thread() {
			public void run() {
				importMaster.startImport();
				
				while(importMaster.isEnded()==false)
                {
                        try {
                                Thread.sleep(1000);
                        } catch (InterruptedException e) {
                                e.printStackTrace();
                        }
                }
                importMaster.waitToEnd();
			}
		};
		
		t.start();
		
		return mapping.findForward("success");
	}
}