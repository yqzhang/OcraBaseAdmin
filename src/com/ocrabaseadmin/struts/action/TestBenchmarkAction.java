/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ocrabaseadmin.struts.action;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ocrabaseadmin.struts.form.TestBenchmarkForm;

import ict.ocrabase.main.java.client.benchmark.ControlMaster;

/** 
 * MyEclipse Struts
 * Creation date: 08-25-2011
 * 
 * XDoclet definition:
 * @struts.action path="/testBenchmark" name="testBenchmarkForm" input="/performanceTest.jsp" scope="request" validate="true"
 */
public class TestBenchmarkAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TestBenchmarkForm testBenchmarkForm = (TestBenchmarkForm) form;// TODO Auto-generated method stub
		
		final String hbaseHome = testBenchmarkForm.getHbaseHome();
		final String threadNumber = testBenchmarkForm.getThreadNumber();
		final String tableDescriptor = testBenchmarkForm.getTableDescriptor();
		final String dataResource = testBenchmarkForm.getDataResource();
		final String method = testBenchmarkForm.getMethod();
		String dataType = testBenchmarkForm.getDataType();
		
		Thread t = new Thread() {
			public void run() {
				ControlMaster ctrl = new ControlMaster(Integer.parseInt(threadNumber), tableDescriptor, hbaseHome, dataResource, (method.equals("Write") ? "Put" : "Scan"));
				
				try {
					ctrl.StartControl();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				while (ctrl.isEnded() == false) {
				      ctrl.ShowStatus();
				      try {
				        Thread.sleep(3000);
				      } catch (InterruptedException e) {
				        e.printStackTrace();
				      }
				    }
				ctrl.ShowStatus();
				ctrl.waitToEnd();
			}
		};
		
		t.start();
		
		return mapping.findForward("success");
	}
}